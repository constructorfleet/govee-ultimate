{
  "states": [
    {
      "state_name": "power",
      "op_type": "toggle",
      "identifiers": {
        "status": {
          "opcode": "0x01",
          "payload": "0100",
          "description": "Status query for power state"
        },
        "command": {
          "opcode": "0x01",
          "payloads": {
            "on": "0101",
            "off": "0100"
          }
        }
      },
      "parse_options": {
        "value_map": {
          "0101": true,
          "0100": false
        },
        "byte_index": 1
      },
      "status_templates": [
        {
          "opcode": "0x01",
          "payload": "0100",
          "expect_bytes": 3,
          "notes": "Returns 0x01 when device is powered on"
        }
      ],
      "command_templates": [
        {
          "name": "set_power",
          "opcode": "0x01",
          "payload_template": "01{{ '01' if value else '00' }}",
          "description": "Toggle power for devices that use the standard op"
        }
      ]
    },
    {
      "state_name": "active",
      "op_type": "toggle",
      "identifiers": {
        "status": {
          "opcode": "0x06",
          "payload": "0601",
          "description": "Reports whether a device is actively running"
        },
        "command": {
          "opcode": "0x06",
          "payloads": {
            "active": "0601",
            "inactive": "0600"
          }
        }
      },
      "parse_options": {
        "value_map": {
          "0601": true,
          "0600": false
        },
        "byte_index": 2
      },
      "status_templates": [
        {
          "opcode": "0x06",
          "payload": "0600",
          "expect_bytes": 3,
          "notes": "Third byte encodes active flag"
        }
      ],
      "command_templates": [
        {
          "name": "set_active",
          "opcode": "0x06",
          "payload_template": "06{{ '01' if value else '00' }}",
          "description": "Toggle whether a device is active"
        }
      ]
    },
    {
      "state_name": "brightness",
      "op_type": "range",
      "identifiers": {
        "status": {
          "opcode": "0x02",
          "payload": "0201",
          "description": "Reports brightness percentage"
        },
        "command": {
          "opcode": "0x02",
          "payload_range": {
            "min": "020000",
            "max": "026400"
          }
        }
      },
      "parse_options": {
        "byte_index": 2,
        "scaling": {
          "factor": 1,
          "min": 0,
          "max": 100
        }
      },
      "status_templates": [
        {
          "opcode": "0x02",
          "payload": "0200",
          "expect_bytes": 4,
          "notes": "Byte 3 encodes brightness level"
        }
      ],
      "command_templates": [
        {
          "name": "set_brightness",
          "opcode": "0x02",
          "payload_template": "02{{ value | int | format('02x') }}00",
          "description": "Set brightness percentage"
        }
      ]
    },
    {
      "state_name": "color_temperature",
      "op_type": "kelvin",
      "identifiers": {
        "status": {
          "opcode": "0x03",
          "payload": "0301",
          "description": "Reports color temperature in Kelvin"
        },
        "command": {
          "opcode": "0x03",
          "payload_range": {
            "min": "0307d0",
            "max": "0321fc"
          }
        }
      },
      "parse_options": {
        "byte_indices": [
          2,
          3
        ],
        "byte_order": "big",
        "range": {
          "min": 2000,
          "max": 8700
        }
      },
      "status_templates": [
        {
          "opcode": "0x03",
          "payload": "0300",
          "expect_bytes": 5,
          "notes": "Bytes 3-4 encode Kelvin value"
        }
      ],
      "command_templates": [
        {
          "name": "set_color_temperature",
          "opcode": "0x03",
          "payload_template": "03{{ value | int | format('04x') }}",
          "description": "Set color temperature in Kelvin"
        }
      ]
    },
    {
      "state_name": "color_rgb",
      "op_type": "color",
      "identifiers": {
        "status": {
          "opcode": "0x04",
          "payload": "0401",
          "description": "Returns RGB bytes"
        },
        "command": {
          "opcode": "0x04",
          "payload_format": "rrggbb"
        }
      },
      "parse_options": {
        "payload_format": {
          "order": [
            "red",
            "green",
            "blue"
          ],
          "bytes": 3,
          "encoding": "hex"
        }
      },
      "status_templates": [
        {
          "opcode": "0x04",
          "payload": "0400",
          "expect_bytes": 7,
          "notes": "Bytes 3-5 map to R,G,B"
        }
      ],
      "command_templates": [
        {
          "name": "set_rgb_color",
          "opcode": "0x04",
          "payload_template": "04{{ red | int | format('02x') }}{{ green | int | format('02x') }}{{ blue | int | format('02x') }}",
          "description": "Set RGB color payload"
        }
      ]
    },
    {
      "state_name": "scene",
      "op_type": "enum",
      "identifiers": {
        "status": {
          "opcode": "0x05",
          "payload": "0501",
          "description": "Returns scene code"
        },
        "command": {
          "opcode": "0x05",
          "payload_format": "scene_id"
        }
      },
      "parse_options": {
        "value_map": {
          "0001": "sunrise",
          "0002": "sunset",
          "0003": "candle"
        }
      },
      "status_templates": [
        {
          "opcode": "0x05",
          "payload": "0500",
          "expect_bytes": 6,
          "notes": "Bytes 3-4 encode scene id"
        }
      ],
      "command_templates": [
        {
          "name": "set_scene",
          "opcode": "0x05",
          "payload_template": "05{{ scene_id }}",
          "description": "Apply dynamic scene"
        }
      ]
    },
    {
      "state_name": "presence_detection",
      "op_type": "sensor",
      "identifiers": {
        "status": {
          "opcode": "0x10",
          "payload": "1000",
          "description": "Presence sensor status"
        }
      },
      "parse_options": {
        "value_map": {
          "01": "occupied",
          "00": "clear"
        },
        "byte_index": 2
      },
      "status_templates": [
        {
          "opcode": "0x10",
          "payload": "1000",
          "expect_bytes": 4,
          "notes": "Byte 3 toggles presence"
        }
      ],
      "command_templates": []
    },
    {
      "state_name": "presence_detection_settings",
      "op_type": "composite",
      "identifiers": {
        "status": {
          "sequence": [
            "0x11",
            "0x12"
          ],
          "description": "Sensitivity and timeout query"
        },
        "command": {
          "sequence": [
            "0x11",
            "0x12"
          ],
          "description": "Two-step write to persist settings"
        }
      },
      "parse_options": {
        "fields": {
          "sensitivity": {
            "byte_index": 2,
            "range": [
              1,
              5
            ]
          },
          "hold_time": {
            "byte_index": 3,
            "range": [
              5,
              900
            ]
          }
        }
      },
      "status_templates": [
        {
          "opcode": "0x11",
          "payload": "1100",
          "expect_bytes": 6,
          "notes": "First response yields sensitivity and hold time"
        },
        {
          "opcode": "0x12",
          "payload": "1200",
          "expect_bytes": 4,
          "notes": "Second response confirms mmWave enable flag"
        }
      ],
      "command_templates": [
        {
          "name": "set_presence_settings",
          "opcode": "0x11",
          "payload_template": "11{{ sensitivity | int | format('02x') }}{{ hold_time | int | format('04x') }}",
          "description": "Configure mmWave detection",
          "multi_step": [
            "Dispatch configuration payload via opcode 0x11",
            "Send 0x12 commit command to apply updated detection mode"
          ]
        }
      ]
    },
    {
      "state_name": "enable_presence",
      "op_type": "composite",
      "identifiers": {
        "status": {
          "opcode": "0x1F",
          "payload": "1F00",
          "description": "Presence enable flags"
        },
        "command": {
          "opcode": "0x33",
          "description": "Toggle biological and mmWave detection"
        }
      },
      "parse_options": {
        "fields": {
          "biologicalEnabled": {
            "byte_index": 2,
            "value_map": {
              "01": true,
              "00": false
            }
          },
          "mmWaveEnabled": {
            "byte_index": 3,
            "value_map": {
              "01": true,
              "00": false
            }
          }
        }
      },
      "status_templates": [
        {
          "opcode": "0x1F",
          "payload": "1F00",
          "expect_bytes": 4,
          "notes": "Byte 3 enables biological, byte 4 enables mmWave"
        }
      ],
      "command_templates": [
        {
          "name": "set_presence_enable",
          "opcode": "0x33",
          "payload_template": "331F{{ biological | int | format('02x') }}{{ mmwave | int | format('02x') }}",
          "description": "Issue multi-sync toggle command",
          "notes": "Payload bytes represent biological then mmWave enable flags"
        }
      ]
    },
    {
      "state_name": "detection_settings",
      "op_type": "composite",
      "identifiers": {
        "status": {
          "sequence": [
            "0x05",
            "0x01"
          ],
          "description": "Detection distance and reporting intervals"
        },
        "command": {
          "sequence": [
            "0x33",
            "0x33"
          ],
          "description": "Two-step update of detection sensitivity"
        }
      },
      "parse_options": {
        "fields": {
          "detectionDistance": {
            "byte_index": [
              2,
              3
            ],
            "unit": "cm"
          },
          "absenceDuration": {
            "byte_index": [
              4,
              5
            ],
            "unit": "s"
          },
          "reportDetection": {
            "byte_index": [
              6,
              7
            ],
            "unit": "s"
          }
        }
      },
      "status_templates": [
        {
          "opcode": "0x05",
          "payload": "0500",
          "expect_bytes": 4,
          "notes": "Handshake prior to reading detection settings"
        },
        {
          "opcode": "0x05",
          "payload": "0501",
          "expect_bytes": 8,
          "notes": "Bytes 3-8 encode distance and durations"
        }
      ],
      "command_templates": [
        {
          "name": "prepare_detection_settings",
          "opcode": "0x33",
          "payload_template": "33050001",
          "description": "Initiate detection settings update",
          "multi_step": [
            "Send configuration preamble for opcode 0x05",
            "Transmit detection distance and duration payload"
          ]
        },
        {
          "name": "commit_detection_settings",
          "opcode": "0x33",
          "payload_template": "330501{{ detection_distance | int | format('04x') }}{{ absence_duration | int | format('04x') }}{{ report_detection | int | format('04x') }}",
          "description": "Update detection distance (cm) and durations (s)",
          "notes": "Formats centimetres and seconds into big-endian fields"
        }
      ]
    },
    {
      "state_name": "humidifier_mode",
      "op_type": "enum",
      "identifiers": {
        "status": {
          "opcode": "0x20",
          "payload": "2000",
          "description": "Humidifier operating mode"
        },
        "command": {
          "opcode": "0x20",
          "payloads": {
            "auto": "2001",
            "sleep": "2002",
            "manual": "2003",
            "program": "2004"
          }
        }
      },
      "parse_options": {
        "value_map": {
          "01": "auto",
          "02": "sleep",
          "03": "manual",
          "04": "program"
        },
        "byte_index": 2
      },
      "status_templates": [
        {
          "opcode": "0x20",
          "payload": "2000",
          "expect_bytes": 4,
          "notes": "Byte 3 encodes humidifier mode"
        }
      ],
      "command_templates": [
        {
          "name": "set_humidifier_mode",
          "opcode": "0x20",
          "payload_template": "20{{ mode_code }}",
          "description": "Apply humidifier operating mode"
        }
      ]
    },
    {
      "state_name": "mist_level",
      "op_type": "range",
      "identifiers": {
        "status": {
          "opcode": "0x21",
          "payload": "2100",
          "description": "Mist output level"
        },
        "command": {
          "opcode": "0x21",
          "payload_range": {
            "min": "2101",
            "max": "2103"
          }
        }
      },
      "parse_options": {
        "value_map": {
          "01": "low",
          "02": "medium",
          "03": "high"
        },
        "byte_index": 2
      },
      "status_templates": [
        {
          "opcode": "0x21",
          "payload": "2100",
          "expect_bytes": 4,
          "notes": "Byte 3 holds mist level code"
        }
      ],
      "command_templates": [
        {
          "name": "set_mist_level",
          "opcode": "0x21",
          "payload_template": "21{{ level_code }}",
          "description": "Set humidifier mist intensity"
        }
      ]
    },
    {
      "state_name": "target_humidity",
      "op_type": "range",
      "identifiers": {
        "status": {
          "opcode": "0x22",
          "payload": "2200",
          "description": "Target humidity percentage"
        },
        "command": {
          "opcode": "0x22",
          "payload_range": {
            "min": "221E",
            "max": "225A"
          }
        }
      },
      "parse_options": {
        "byte_index": 2,
        "scaling": {
          "factor": 1,
          "min": 30,
          "max": 90
        }
      },
      "status_templates": [
        {
          "opcode": "0x22",
          "payload": "2200",
          "expect_bytes": 4,
          "notes": "Byte 3 encodes target humidity"
        }
      ],
      "command_templates": [
        {
          "name": "set_target_humidity",
          "opcode": "0x22",
          "payload_template": "22{{ value | int | format('02x') }}",
          "description": "Set humidifier target humidity"
        }
      ]
    },
    {
      "state_name": "humidifier_program_1",
      "op_type": "struct",
      "identifiers": {
        "command": {
          "opcode": "0x23",
          "payload": "2300",
          "description": "Configure humidifier program 1"
        }
      },
      "parse_options": {},
      "status_templates": [],
      "command_templates": [
        {
          "name": "set_humidifier_program_1",
          "opcode": "0x23",
          "payload_template": "23{{ mist_level | int | format('02x') }}{{ duration | int | format('04x') }}{{ remaining | int | format('04x') }}",
          "description": "Set program 1 mist level and durations"
        }
      ]
    },
    {
      "state_name": "humidifier_program_2",
      "op_type": "struct",
      "identifiers": {
        "command": {
          "opcode": "0x24",
          "payload": "2400",
          "description": "Configure humidifier program 2"
        }
      },
      "parse_options": {},
      "status_templates": [],
      "command_templates": [
        {
          "name": "set_humidifier_program_2",
          "opcode": "0x24",
          "payload_template": "24{{ mist_level | int | format('02x') }}{{ duration | int | format('04x') }}{{ remaining | int | format('04x') }}",
          "description": "Set program 2 mist level and durations"
        }
      ]
    },
    {
      "state_name": "humidifier_program_3",
      "op_type": "struct",
      "identifiers": {
        "command": {
          "opcode": "0x25",
          "payload": "2500",
          "description": "Configure humidifier program 3"
        }
      },
      "parse_options": {},
      "status_templates": [],
      "command_templates": [
        {
          "name": "set_humidifier_program_3",
          "opcode": "0x25",
          "payload_template": "25{{ mist_level | int | format('02x') }}{{ duration | int | format('04x') }}{{ remaining | int | format('04x') }}",
          "description": "Set program 3 mist level and durations"
        }
      ]
    },
    {
      "state_name": "battery_level",
      "op_type": "sensor",
      "identifiers": {
        "status": {
          "opcode": "0x2A",
          "payload": "2A00",
          "description": "Battery percentage status"
        }
      },
      "parse_options": {
        "byte_index": 2,
        "scaling": {
          "factor": 1,
          "min": 0,
          "max": 100
        }
      },
      "status_templates": [
        {
          "opcode": "0x2A",
          "payload": "2A00",
          "expect_bytes": 4,
          "notes": "Byte 3 reports battery percentage"
        }
      ],
      "command_templates": []
    },
    {
      "state_name": "timer",
      "op_type": "command",
      "identifiers": {
        "status": {
          "opcode": "0x32",
          "payload": "3200",
          "description": "Timer enabled flag and duration"
        }
      },
      "parse_options": {
        "byte_index": 0,
        "duration_bytes": [
          1,
          2
        ]
      },
      "status_templates": [
        {
          "opcode": "0x32",
          "payload": "3200",
          "expect_bytes": 6,
          "notes": "Bytes 3-5 encode timer status"
        }
      ],
      "command_templates": [
        {
          "name": "set_timer",
          "opcode": "0x32",
          "payload_template": "32{{ '01' if enabled else '00' }}{{ duration | int | format('04x') }}",
          "description": "Configure timer enabled flag and duration in seconds"
        }
      ]
    },
    {
      "state_name": "water_shortage",
      "op_type": "sensor",
      "identifiers": {
        "status": {
          "opcode": "0x23",
          "payload": "2300",
          "description": "Water shortage alarm"
        }
      },
      "parse_options": {
        "value_map": {
          "01": "empty",
          "00": "ok"
        },
        "byte_index": 2
      },
      "status_templates": [
        {
          "opcode": "0x23",
          "payload": "2300",
          "expect_bytes": 4,
          "notes": "Byte 3 raises shortage flag"
        }
      ],
      "command_templates": []
    },
    {
      "state_name": "air_quality_temperature",
      "op_type": "environment",
      "identifiers": {},
      "parse_options": {
        "measurement": {
          "fields": [
            "current",
            "calibration",
            "min",
            "max"
          ],
          "scaling": "hundredths",
          "unit": "celsius"
        }
      },
      "status_templates": [],
      "command_templates": []
    },
    {
      "state_name": "air_quality_humidity",
      "op_type": "environment",
      "identifiers": {},
      "parse_options": {
        "measurement": {
          "fields": [
            "current",
            "min",
            "max"
          ],
          "unit": "percent",
          "range": {
            "min": 0,
            "max": 100
          }
        }
      },
      "status_templates": [],
      "command_templates": []
    },
    {
      "state_name": "air_quality_pm25",
      "op_type": "environment",
      "identifiers": {},
      "parse_options": {
        "measurement": {
          "fields": [
            "current",
            "warning",
            "min",
            "max"
          ],
          "unit": "\u00b5g/m\u00b3",
          "warning_flag": "warning"
        }
      },
      "status_templates": [],
      "command_templates": []
    },
    {
      "state_name": "ice_maker_nugget_size",
      "op_type": "appliance",
      "identifiers": {
        "status": {
          "opcode": "0x05",
          "payload": "0500",
          "description": "Reports selected nugget size"
        },
        "command": {
          "opcode": "0x33",
          "payload": "0500",
          "description": "Set nugget size preference"
        }
      },
      "parse_options": {
        "value_map": {
          "03": "SMALL",
          "02": "MEDIUM",
          "01": "LARGE"
        },
        "default": "SMALL"
      },
      "status_templates": [
        {
          "opcode": "0x05",
          "payload": "0500",
          "expect_bytes": 3,
          "notes": "Last byte enumerates nugget size"
        }
      ],
      "command_templates": [
        {
          "name": "set_nugget_size",
          "opcode": "0x33",
          "payload_template": "05{{ code|format('02X') }}",
          "description": "Select nugget size for ice production"
        }
      ]
    },
    {
      "state_name": "ice_maker_basket_full",
      "op_type": "appliance",
      "identifiers": {
        "status": {
          "opcode": "0x17",
          "payload": "1700",
          "description": "Basket capacity alarm"
        }
      },
      "parse_options": {
        "byte_index": 3
      },
      "status_templates": [
        {
          "opcode": "0x17",
          "payload": "170000",
          "expect_bytes": 4,
          "notes": "Fourth byte contains full flag"
        }
      ],
      "command_templates": []
    },
    {
      "state_name": "ice_maker_water_empty",
      "op_type": "appliance",
      "identifiers": {
        "status": {
          "opcode": "0x17",
          "payload": "1700",
          "description": "Water reservoir empty alarm"
        }
      },
      "parse_options": {
        "byte_index": 3
      },
      "status_templates": [
        {
          "opcode": "0x17",
          "payload": "170000",
          "expect_bytes": 4,
          "notes": "Fourth byte contains water empty flag"
        }
      ],
      "command_templates": []
    },
    {
      "state_name": "ice_maker_status",
      "op_type": "appliance",
      "identifiers": {
        "status": {
          "opcode": "0x19",
          "payload": "1900",
          "description": "Operational state of the ice maker"
        },
        "command": {
          "opcode": "0x33",
          "payload": "1900",
          "description": "Set operational state"
        }
      },
      "parse_options": {
        "value_map": {
          "00": "STANDBY",
          "01": "MAKING_ICE",
          "02": "FULL",
          "03": "WASHING",
          "04": "FINISHED_WASHING",
          "05": "SCHEDULED"
        },
        "default": "STANDBY"
      },
      "status_templates": [
        {
          "opcode": "0x19",
          "payload": "1900",
          "expect_bytes": 3,
          "notes": "Last byte enumerates status code"
        }
      ],
      "command_templates": [
        {
          "name": "set_ice_maker_status",
          "opcode": "0x33",
          "payload_template": "19{{ code|format('02X') }}",
          "description": "Request a specific operating state"
        }
      ]
    },
    {
      "state_name": "ice_maker_scheduled_start",
      "op_type": "appliance",
      "identifiers": {
        "status": {
          "opcode": "0x23",
          "payload": "2300",
          "description": "Scheduled start configuration"
        },
        "command": {
          "opcode": "0x33",
          "payload": "2300",
          "description": "Configure scheduled start"
        }
      },
      "parse_options": {
        "fields": [
          "enabled",
          "hourStart",
          "minuteStart",
          "nuggetSize"
        ]
      },
      "status_templates": [
        {
          "opcode": "0x23",
          "payload": "230000000000",
          "expect_bytes": 10,
          "notes": "Payload includes enable flag, delay, epoch seconds and nugget size"
        }
      ],
      "command_templates": [
        {
          "name": "set_scheduled_start",
          "opcode": "0x33",
          "payload_template": "23{{ payload }}",
          "description": "Schedule ice production"
        }
      ]
    },
    {
      "state_name": "ice_maker_temperature",
      "op_type": "environment",
      "identifiers": {
        "status": {
          "opcode": "0x10",
          "payload": "1000",
          "description": "Ambient temperature inside the ice maker"
        }
      },
      "parse_options": {
        "measurement": {
          "fields": [
            "current"
          ],
          "unit": "C",
          "range": {
            "min": -20,
            "max": 60
          }
        }
      },
      "status_templates": [
        {
          "opcode": "0x10",
          "payload": "10000000",
          "expect_bytes": 5,
          "notes": "Second through fourth bytes encode temperature x10000"
        }
      ],
      "command_templates": []
    }
  ]
}
